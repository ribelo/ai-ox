use thiserror::Error;

/// Represents the possible errors that can occur when interacting with a model.
#[derive(Error, Debug)]
pub enum GenerateContentError {
    /// An error originating from the underlying model client (e.g., `gemini-ox`).
    #[error("Underlying client error: {0}")]
    ClientError(#[from] gemini_ox::GeminiRequestError),

    /// An error related to invalid configuration.
    #[error("Invalid configuration: {0}")]
    Configuration(String),

    /// An error that occurs when converting messages between the `ai-ox` format
    /// and the provider-specific format.
    #[error("Message conversion error: {0}")]
    MessageConversion(String),

    /// An error that occurs when the model's response cannot be parsed correctly.
    #[error("Failed to parse model response: {0}")]
    ResponseParsing(String),

    /// An error indicating that the model did not generate any response content.
    #[error("No response was generated by the model")]
    NoResponse,
}
