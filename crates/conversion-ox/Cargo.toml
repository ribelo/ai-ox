[package]
name = "conversion-ox"
version = "0.1.0"
edition = "2024"
license = "MIT"
description = "AI provider format conversions for ai-ox ecosystem"
readme = "README.md"
repository = "https://github.com/ribelo/ai-ox"
categories = ["api-bindings", "asynchronous"]
keywords = ["ai", "conversion", "anthropic", "gemini", "openrouter", "openai"]

[features]
default = []
# Individual provider conversions
anthropic-openrouter = ["dep:anthropic-ox", "dep:openrouter-ox"]
anthropic-gemini = ["dep:anthropic-ox", "dep:gemini-ox"]
anthropic-openai = ["dep:anthropic-ox", "dep:openai-ox"]

# Convenience feature for all conversions
all = ["anthropic-openrouter", "anthropic-gemini", "anthropic-openai"]
# Test feature that enables all functionality for testing
test = ["all"]

[dependencies]
# Core dependencies
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
uuid = { workspace = true }
async-stream = { workspace = true }
futures-util = { workspace = true }
chrono = { workspace = true }
log = "0.4"
base64 = "0.22"

# Provider crates (optional)
anthropic-ox = { path = "../anthropic-ox", optional = true, features = ["full"] }
openrouter-ox = { path = "../openrouter-ox", optional = true }
gemini-ox = { path = "../gemini-ox", optional = true }
openai-ox = { path = "../openai-ox", optional = true }
ai-ox-common = { workspace = true }
ai-ox = { path = "../ai-ox" }


[dev-dependencies]
tokio = { workspace = true }
ai-ox = { path = "../ai-ox" }