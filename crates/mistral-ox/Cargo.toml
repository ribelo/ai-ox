[package]
name = "mistral-ox"
version = "0.1.0"
edition = "2024"
license = "MIT"
description = "Mistral AI API client for Rust"
readme = "README.md"
repository = "https://github.com/ribelo/ai-ox"
categories = ["api-bindings", "asynchronous"]
keywords = ["mistral", "ai", "api", "client", "async"]

[dependencies]
bon = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
reqwest = { workspace = true }
thiserror = { workspace = true }
futures-util = { workspace = true }
async-stream = { workspace = true }
chrono = { workspace = true }
derive_more = { workspace = true }
bytes = { workspace = true }
mime = { workspace = true }
mime_guess = { workspace = true }
base64 = { workspace = true }
strum = { workspace = true }
schemars = { workspace = true, optional = true }
tokio = { workspace = true }
url = { workspace = true }
anyhow = { workspace = true }
leaky-bucket = { workspace = true, optional = true }
ai-ox-common = { workspace = true }

[features]
default = []
leaky-bucket = ["dep:leaky-bucket"]
schema = ["dep:schemars"]

[dev-dependencies]
tokio = { workspace = true, features = ["rt-multi-thread", "macros"] }